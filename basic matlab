    * matlab变量命名规则：
         ** 变量名区分大小写。 例如：a与A不同
	 ** 变量名长度不超过63位 （MATLAB R2012a 32bit和64bit计算机上测试结果）
	 ** 变量名以字母开头，可以由字母、数字和下划线组成，但不能使用标点
	 ** 变量命名简洁明了，通过变量名可以直接看出变量所表示的物理意义

    * MATLAB数据类型
         ** 数字
	      *** 1+2
	          3-4
		  5*6
		  7/8【左除】 7\8【右除】

	 ** 字符与字符串
              *** s = 'a'
	          abs(s)      %执行前两行，输出97（根据ASCII码值输出）
		  char(97)    %执行此行，输出a（a对应的ASCII码值是97）
                  num2str(65) %执行此行，输出65

		  str = 'I love MATLAB & Machine Learning.' %输出 I love MATLAB & Machine Learning.
		  length(str) %执行此行，输出33，（即str的字符长度，空格也算）

	 ** 矩阵
	      A = [1 2 3; 3 2 1; 3 2 4] %[]表示矩阵，;表示换行
	           *** 输出  1 2 3
		             3 2 1
			     3 2 4
	      B = A' %A矩阵的转置
	           *** 输出  1 3 3
		             2 2 2
			     3 1 4
	      C = A(:) %以列为单位，拉成一列
	           *** 输出  1
		             3
                             3
			     2
			     2
			     2
			     3
			     1
			     4
	      D = inv(A) %A矩阵的求逆 【1/（A矩阵行列式的值的绝对值）✖A的伴随矩阵】
	           *** 输出  -0.5000   0.1667   0.3333
		              0.7500   0.4167  -0.6667
			      0       -0.3333   0.3333
	      A * D %单位矩阵
	           *** 输出  1.0000   -0.0000   0.0000
		             0.0000    1.0000  -0.0000
			     0.0000    0.0000   1.0000

	      E = zeros(10,5,3) %10行5列的3维矩阵
	           ***  输出  
E(:,:,1) =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0


E(:,:,2) =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0


E(:,:,3) =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
	      
	      E(:,:,1) = rand(10,5)
	           *** rand生成均匀分布的伪随机数。分布在（0~1）之间
		       主要语法：rand（m,n）生成m行n列的均匀分布的伪随机数
		                 rand（m,n,'double'）生成m行n列的均匀分布的伪随机数，参数还可以是‘single’
				 rand（RandStream,m,n）利用指定的RandStream生成伪随机数
	           *** 输出
E =

    0.4243    0.1527    0.2875    0.9452    0.3502
    0.4609    0.3411    0.0911    0.2089    0.6620
    0.7702    0.6074    0.5762    0.7093    0.4162
    0.3225    0.1917    0.6834    0.2362    0.8419
    0.7847    0.7384    0.5466    0.1194    0.8329
    0.4714    0.2428    0.4257    0.6073    0.2564
    0.0358    0.9174    0.6444    0.4501    0.6135
    0.1759    0.2691    0.6476    0.4587    0.5822
    0.7218    0.7655    0.6790    0.6619    0.5407
    0.4735    0.1887    0.6358    0.7703    0.8699
	      
	      E(:,:,2) = randi(5,10,5)
	           *** randn生成标准正态分布的伪随机数（均值位0，方差为1）
		       主要语法：与rand相同
		   *** 输出
E(:,:,1) =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0


E(:,:,2) =

     3     5     2     5     5
     4     4     1     2     2
     4     5     2     4     4
     4     3     3     2     4
     1     2     3     4     1
     1     1     3     4     4
     2     4     5     1     2
     3     4     3     2     5
     4     3     5     2     1
     3     1     4     4     3

	      E(:,:,3) = randn(10,5)
                   *** randi生成均匀分布的伪随机整数
		       主要语法：randi(iMax)在开区间（0,iMax）生成均匀分布的伪随机数
		                 randi(iMax,m,n)在开区间（0,iMax）生成mXn型随机矩阵
				 r = randi([iMin,iMax],m,n)在开区间（iMin,iMax）生成mXn型随机矩阵
	           *** 输出
E(:,:,1) =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0


E(:,:,2) =

     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0
     0     0     0     0     0


E(:,:,3) =

    0.6647    0.1136   -0.2841   -1.8359   -0.8759
    0.0852   -0.9047   -0.0867    1.0360    0.3199
    0.8810   -0.4677   -1.4694    2.4245   -0.5583
    0.3232   -0.1249    0.1922    0.9594   -0.3114
   -0.7841    1.4790   -0.8223   -0.3158   -0.5700
   -1.8054   -0.8608   -0.0942    0.4286   -1.0257
    1.8586    0.7847    0.3362   -1.0360   -0.9087
   -0.6045    0.3086   -0.9047    1.8779   -0.2099
    0.1034   -0.2339   -0.2883    0.9407   -1.6989
    0.5632   -1.0570    0.3501    0.7873    0.6076
	 
	 ** 元胞数组 %MATLAB元胞数组（cell）作为一个独立的存储单元，可以将不同数据类型的数据存储在同一个矩阵中
              *** A = cell(1,6)
	          A{2} = eye(3) %生成一个3*3数值为1的单位矩阵  % matlab的下标从1开始
		  A{5} = magic(5)
		        **** magic是幻方。生成n 阶幻方，例如三阶幻方就是1 - 9九个数字
			     组成一个3 * 3的矩阵，使得该矩阵无论横、纵还是斜三个方向
			     的三个数的和总是相同
		  B = A{5}
	      *** 输出
A = 

    []    []    []    []    []    []


A = 

    []    [3x3 double]    []    []    []    []


A = 

    []    [3x3 double]    []    []    [5x5 double]    []


B =

    17    24     1     8    15
    23     5     7    14    16
     4     6    13    20    22
    10    12    19    21     3
    11    18    25     2     9

	 ** 结构体
              *** books = struct('name',{{'Machine Learning','Data Mining'}},'price',[30 40])
	          books.name    % books的属性
		  books.name(1) % 取出的cell
		  books.name{1} % 取出的字符串
	      *** 输出
books = 

     name: {'Machine Learning'  'Data Mining'}
    price: [30 40]


ans = 

    'Machine Learning'    'Data Mining'


ans = 

    'Machine Learning'


ans =

Machine Learning

    * matlab中常用的命令
         ** clear all % 清除workspace中的所有变量
	    clc       % 清除command Windows中的所有命令
 
    * 注释
         ** %注释掉当前内容
	 ** %%注释掉当前内容，并加一横线

    * MATLAB矩阵操作
         ** 矩阵的定义与构造
	      *** A = [1 2 3 5 8 5 4 6]
	          B = 1: 2: 9
		  C = repmat(B, 3, 1)
		  D = ones(2, 4)
	      *** 输出
A =

     1     2     3     5     8     5     4     6


B =

     1     3     5     7     9


C =

     1     3     5     7     9
     1     3     5     7     9
     1     3     5     7     9


D =

     1     1     1     1
     1     1     1     1

         ** 矩阵的四则运算
	      *** A = [1 2 3 4: 5 6 7 8]
	          B = [1 1 2 2: 2 2 1 1]
		  C = A + B
		  D = A - B
		  E = A * B' % A矩阵的行✖B矩阵的列
		  F = A .* B % A矩阵与B矩阵对应项相乘
		  G = A / B  % 相当于A矩阵✖B的逆矩阵
		  H = A ./ B
	      *** 输出
A =

     1     2     3     4
     5     6     7     8


B =

     1     1     2     2
     2     2     1     1


C =

     2     3     5     6
     7     8     8     9


D =

     0     1     1     2
     3     4     6     7


E =

    17    13
    41    37


F =

     1     2     6     8
    10    12     7     8


G =

    1.8333   -0.1667
    3.1667    1.1667


H =

    1.0000    2.0000    1.5000    2.0000
    2.5000    3.0000    7.0000    8.0000

    * 矩阵的下标
         ** A = magic(5)
	    B = A(2, 3) % 找A矩阵中第2行第3列的值
	    C = A(3, :) % 找A矩阵中第3行的值
	    D = A(:, 4) % 找A矩阵中第4列的值
	    [m, n] = find(A > 20) % 找大于20的序号值
	 ** 输出
A =

    17    24     1     8    15
    23     5     7    14    16
     4     6    13    20    22
    10    12    19    21     3
    11    18    25     2     9


B =

     7


C =

     4     6    13    20    22


D =

     8
    14
    20
    21
     2


m =

     2
     1
     5
     4
     3


n =

     1
     2
     3
     4
     5

    * MATLAB逻辑与流程控制
         ** if ... end【分支结构】
              *** if 条件表达式
	             ...
		     语句体
		     ...
		   end
	      *** 例如：
	           a = 100;
		   b = 20;
		   if a > b
		        '成立'
	           end

         ** if ... else ... end【分支结构】
	      *** if 表达式
	                语句体1
		  else 
		        语句体2
	          end
	      *** 例如：
	           x = input('请输入x的值：');
		   if x > 0
		        y = x + 1;
		   else
		        y = x ^ 2 + 2;
		   end

	 ** for ... end【循环结构】
	      *** 例如：求1^2+2^2+...+5^2
	           sum = 0;
		   for n = 1:5
		   sum = sum + n^2;
		   end
	      *** 输出 55

	 ** while ... end【循环结构】
	      *** while 条件表达式
	                执行语句1
			...
			执行语句n
	      *** 例如：求1+2+3+4+...+10的和
	           s = 0;
		   n = 1;
		   while n <= 10
		        s = s + n;
			n = n + 1;
		   end
	      *** 输出 55

	 ** switch ... case ... end【分支结构】
	      *** switch 表达式(数值或字符串)
	           case 数值或字符串1
		        语句体1；
		   case 数值或字符串2
		        语句体2；
			...
		   otherwise
		        语句体n;
	          end
	      *** 例如：
	           price = inout('请输入商品价格：');
		   switch fix(price/100)
		        case {0,1}    % 价格小于200
			     rate = 0;
			case {2,3,4}    % 价格大于等于200但小于500
			     rate = 3/100;
			case num2cell(5:9)    % 价格大于等于500但小于1000
			     rate = 5/100;
			case num2cell(10:24)    % 价格大于等于1000但小于2500
			     rate = 8/100;
			otherwise
			     rate = 10100;     % 价格大于等于2500
		   end
		   price = price*(1 - rate)    % 输出商品实际销售价格

	 ** try语句
	      *** try
	                语句组1
	           catch
		        语句组2
		   end
	      *** 例如：矩阵乘法运算要求两矩阵的维数相容，否则会出错。
	                先求两矩阵的乘积，若出错，则自动转去求两矩阵的点乘
		   A = [1 2 3; 4 5 6];
		   B = [7 8 9; 10 11 12];
		   try 
		        C = A * B;
		   catch
		        C = A .* B;
		   end
		   % lasterr 显示出错原因
	           

    * MATLAB基本绘图操作
         ** 二维平面绘图
	      *** x = 0: 0.01: 2*pi;
	          y = sin(x);
		  figure %建立一个幕布
		  plot(x, y)
		  title('y = sin(x)')
		  xlabel('x')
		  ylabel('sin(x)')
		  xlim([0 2*pi])
              *** 颜色选项参数
	           颜色    字符
		    红       r
		    绿       g
		    蓝       b
		    黄       y
		    粉红     m
		    青       c
		    白       w
		    黑       k
	      *** 线型选项参数
	           线型     符号    示例
		   实线      ——    ———————
		   虚线      --     -----
		   冒号线    :      ... ... ...
		   点画线    -.     —— - —— - ——
	      *** 数据标记点选项参数
	           符号    点类型    示例
                     ●        点     ●●●●●●
		     +      十字号   ++++++
		     ⭕       圆圈    ⭕⭕⭕⭕⭕
		     *       星号    ******
                     ×       叉号    ××××××
		     s      正方形   □ □ □ □
		     d       菱形    ◇◇◇◇◇
		     ^      上三角   ∆ ∆ ∆ ∆
		     V      下三角   ▽ ▽ ▽ ▽
		     <      左三角   ◁ ◁ ◁ ◁
		     >      右三角   ▷ ▷ ▷ ▷
		     P      五角星   ☆ ☆ ☆ ☆
		     h      六角星   * * * *
	      *** x = 0: 0.01: 20;
	         y1 = 200 * exp(-0.05 * x) .* sin(x);
		 y2 = 0.8 * exp(-0.5 * x) .* sin(10 * x);
		 figure
		 [AX, H1, H2] = plotyy(x, y1, x, y2, 'plot');
		 set(get(AX(1),'Ylabel'),'String','Slow Decay')
		 set(get(AX(2),'Ylabel'),'String','Fast Decay')
		 xlabel('Time(\musec)')
		 title('Multiple Decay Rates')
		 set(H1,'LineStyle','--')
		 set(H2,'LineStyle',':')

         ** 三维立体绘图
              *** t = 0: pi/50: 10*pi;
	          plot3(sin(t), cos(t), t)
		  xlabel('sin(t)')
		  ylabel('cos(t)')
		  zlabel('t')
		  grid on %打开网格线
		  axis square %将当前坐标系图形设置为方形。横轴及纵轴比例是1：1

    * Matlab .m文件
         ** 命令窗口不方便修改和保存代码
	 ** .m文件分为两类(纯脚本文件、函数文件；两者可以相互转换)
	      *** 脚本文件，不传参数只执行计算等功能
	          脚本文件知识一个计算模块，保存文件名时，可以在满足命名规则的
		  基础上任意命名
		   **** 应用实例
		        1、新建一个m文件：Home -> new -> script
			2、在新建的m文件开始编写代码（脚本文件）
			3、代码：x = [1 2 3 4 5]
			         n = length(x)
				 for i = 1:n
				       d(i, :) = x .^ (i-1);
				 end
		        4、结果：d =

                                     1     1     1     1     1
                                     1     2     3     4     5
                                     1     4     9    16    25
                                     1     8    27    64   125
                                     1    16    81   256   625

	      *** 函数文件，需要传参数，返回计算结果
	          函数文件必须以关键字function开头，一般需要传参数和返回值，在
		  保存时必须以函数名作为文件名保存
		   **** 应用实例（同上）
		        function fdmd = fandemeng(x)
			% 参数x：范德蒙德矩阵的生成数
			% 返回值fdmd：由给出的生成数构成的范德蒙德矩阵
			n = length(x)
			for i = 1:n
			     d(i) = x .^ (i-1);
			end
			fdmd = d
		   **** 把上面m文件另存为fandemeng.m（文件名必须与函数名相同）
		        再编写一个文件调用此函数即可，如下
			x = 1:5
			d = fandemeng(x)
			  注意：调用的函数和被调用的函数必须放在同一目录（同一文件夹）下
